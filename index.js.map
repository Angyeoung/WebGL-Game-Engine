{
  "version": 3,
  "sources": ["../src/utils/math.ts", "../src/core/gameObject.ts", "../src/core/camera.ts", "../src/renderer/bwgl.ts", "../src/renderer/renderer.ts", "../src/utils/color.ts", "../src/core/material.ts", "../src/core/mesh.ts", "../src/core/scene.ts", "../src/utils/input.ts", "../src/core/clock.ts", "../src/index.ts"],
  "sourcesContent": ["export class Vector3 {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    static get zero()    { return new Vector3( 0,  0,  0); }\n    static get one()     { return new Vector3( 1,  1,  1); }\n    static get up()      { return new Vector3( 0,  1,  0); }\n    static get down()    { return new Vector3( 0, -1,  0); }\n    static get right()   { return new Vector3( 1,  0,  0); }\n    static get left()    { return new Vector3(-1,  0,  0); }\n    static get forward() { return new Vector3( 0,  0,  1); }\n    static get back()    { return new Vector3( 0,  0, -1); }\n\n    // ! Can be optimized with caching if necessary\n    /** Gets the magnitude (length) of this vector */\n    get magnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    /** Copies a vector, `dst` holds result if supplied */\n    static copy(vector: Vector3, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        dst.x = vector.x;\n        dst.y = vector.y;\n        dst.z = vector.z;\n        return dst;\n    }\n\n    /** Applies a `transformation` to `vector`, `dst` holds result if supplied */\n    static transform(vector: Vector3, transformation: Float32Array, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        const x = (vector.x * transformation[0]) + (vector.y * transformation[4]) + (vector.z * transformation[ 8]) + transformation[12];\n        const y = (vector.x * transformation[1]) + (vector.y * transformation[5]) + (vector.z * transformation[ 9]) + transformation[13];\n        const z = (vector.x * transformation[2]) + (vector.y * transformation[6]) + (vector.z * transformation[10]) + transformation[14];\n        const w = (vector.x * transformation[3]) + (vector.y * transformation[7]) + (vector.z * transformation[11]) + transformation[15];\n        dst.x = x / w;\n        dst.y = y / w;\n        dst.z = z / w;\n        return dst;\n    }\n\n    /** Cross product of two vectors, `dst` holds result if supplied */\n    static cross(a: Vector3, b: Vector3, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        const t1 = a.z * b.x - a.x * b.z;\n        const t2 = a.x * b.y - a.y * b.x;\n        dst.x = a.y * b.z - a.z * b.y;\n        dst.y = t1;\n        dst.z = t2;\n        return dst;\n    }\n\n    /** Dot product of two vectors */\n    static dot(a: Vector3, b: Vector3): number {\n        return (a.x * b.x + a.y * b.y + a.z * b.z);\n    }\n\n    /** Checks if this vector and `vector` are equal */\n    static equals(a: Vector3, b: Vector3): boolean {\n        return !(a.x !== b.x || a.y !== b.y || a.z !== b.z);\n    }\n\n    /** Returns the difference of two vectors, `dst` holds result if supplied */\n    static sub(a: Vector3, b: Vector3, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        dst.x = a.x - b.x;\n        dst.y = a.y - b.y;\n        dst.z = a.z - b.z;\n        return dst;\n    }\n\n    /** Returns the sum of 2 vectors, `dst` holds result if supplied */\n    static add(a: Vector3, b: Vector3, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        dst.x = a.x + b.x;\n        dst.y = a.y + b.y;\n        dst.z = a.z + b.z;\n        return dst;\n    }\n\n    /** Returns `vector * n`, `dst` holds result if supplied */\n    static scale(vector: Vector3, n: number, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        dst.x = vector.x * n;\n        dst.y = vector.y * n;\n        dst.z = vector.z * n;\n        return dst;\n    }\n\n    /** Returns `vector` normalized, `dst` holds result if supplied */\n    static normalize(vector: Vector3, dst?: Vector3): Vector3 {\n        dst = dst || new Vector3(0, 0, 0);\n        const mag = vector.magnitude;\n        if (mag === 0)\n            return dst;\n        const num = 1.0 / mag;\n        dst.x = vector.x * num;\n        dst.y = vector.y * num;\n        dst.z = vector.z * num;\n        return dst;\n    }\n\n    /** Returns the Float32Array representation of a Vector, `dst` holds result if supplied */\n    static f32(vector: Vector3, dst?: Float32Array) {\n        dst = dst || new Float32Array(3);\n        dst[0] = vector.x;\n        dst[1] = vector.y;\n        dst[2] = vector.z;\n        return dst;\n    }\n}\n\nexport class Matrix4 {\n    /** Get a zero matrix, `m` holds result if supplied */\n    static zero(dst?: Float32Array): Float32Array {\n        dst = dst || new Float32Array(16);\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n        dst[4] = 0;\n        dst[5] = 0;\n        dst[6] = 0;\n        dst[7] = 0;\n        dst[8] = 0;\n        dst[9] = 0;\n        dst[10] = 0;\n        dst[11] = 0;\n        dst[12] = 0;\n        dst[13] = 0;\n        dst[14] = 0;\n        dst[15] = 0;\n        return dst;\n    }\n\n    /**\n     * Get an identity matrix, `dst` holds result if supplied\n     * ```\n     * 1 0 0 0\n     * 0 1 0 0\n     * 0 0 1 0\n     * 0 0 0 1\n     * ```\n     */\n    static identity(dst?: Float32Array): Float32Array {\n        dst = Matrix4.zero(dst);\n        dst[0] = 1;\n        dst[5] = 1;\n        dst[10] = 1;\n        dst[15] = 1;\n        return dst;\n    }\n\n    /**\n     * Get a scalar matrix, `dst` holds result if supplied\n     * ```\n     * x 0 0 0\n     * 0 y 0 0\n     * 0 0 z 0\n     * 0 0 0 1\n     * ```\n     */\n    static setScalar(vector: Vector3, dst?: Float32Array): Float32Array {\n        dst = dst || new Float32Array(16);\n        Matrix4.identity(dst);\n        dst[0] = vector.x;\n        dst[5] = vector.y;\n        dst[10] = vector.z;\n        return dst;\n    }\n\n    /**\n     * Creates a view matrix, result stored in `dst` if supplied\n     * @param eye - Position of the viewer\n     * @param target - Target the viewer is looking at in world space\n     * @param up - `[0, 1, 0]` by default\n     * @param dst - Matrix to apply to, new one is created if not supplied\n     */\n    static lookAt(\n        eye: Vector3,\n        target: Vector3,\n        up: Vector3 = Vector3.up,\n        dst?: Float32Array,\n    ): Float32Array {\n        dst = dst || Matrix4.identity();\n        const zAxis = Vector3.sub(target, eye);\n        Vector3.normalize(zAxis, zAxis);\n        const xAxis = Vector3.cross(up, zAxis);\n        Vector3.normalize(xAxis, xAxis);\n        const yAxis = Vector3.cross(zAxis, xAxis);\n        Vector3.normalize(yAxis, yAxis);\n\n        dst[0] = xAxis.x;\n        dst[1] = yAxis.x;\n        dst[2] = zAxis.x;\n        dst[4] = xAxis.y;\n        dst[5] = yAxis.y;\n        dst[6] = zAxis.y;\n        dst[8] = xAxis.z;\n        dst[9] = yAxis.z;\n        dst[10] = zAxis.z;\n        dst[12] = -Vector3.dot(xAxis, eye);\n        dst[13] = -Vector3.dot(yAxis, eye);\n        dst[14] = -Vector3.dot(zAxis, eye);\n\n        return dst;\n    }\n\n    /** Creates a projection matrix, result stored in `dst` if provided */\n    static perspectiveFovLH(\n        fov: number,\n        aspect: number,\n        near: number,\n        far: number,\n        dst?: Float32Array,\n    ): Float32Array {\n        dst = dst || Matrix4.identity();\n        const tan = 1.0 / (Math.tan(fov * 0.5));\n        dst[0] = tan / aspect;\n        dst[5] = tan;\n        dst[10] = -far / (near - far);\n        dst[11] = 1.0;\n        dst[14] = (near * far) / (near - far);\n        dst[15] = 0;\n        return dst;\n    }\n\n    // TODO: Update rotation to quaternions?\n\n    /** Rotates `m` by an Euler rotation `vector` */\n    static rotate(m: Float32Array, vector: Vector3): Float32Array {\n        Matrix4.rotateX(m, vector.x);\n        Matrix4.rotateY(m, vector.y);\n        Matrix4.rotateZ(m, vector.z);\n        return m;\n    }\n\n    /** Rotates `m` about the x-axis by `angle` degrees */\n    static rotateX(m: Float32Array, angle: number): Float32Array {\n        const r = toRadians(angle);\n        const s = Math.sin(r);\n        const c = Math.cos(r);\n        Matrix4.multiply(\n            m,\n            new Float32Array([\n                1,  0, 0, 0,\n                0,  c, s, 0,\n                0, -s, c, 0,\n                0,  0, 0, 1,\n            ]),\n            m\n        );\n        return m;\n    }\n\n    /** Rotates `m` about the y-axis by `angle` degrees */\n    static rotateY(m: Float32Array, angle: number): Float32Array {\n        const r = toRadians(angle);\n        const s = Math.sin(r);\n        const c = Math.cos(r);\n        return Matrix4.multiply(\n            m,\n            new Float32Array([\n                c, 0, -s, 0,\n                0, 1,  0, 0,\n                s, 0,  c, 0,\n                0, 0,  0, 1,\n            ]),\n            m,\n        );\n    }\n\n    /** Rotates `m` about the z-axis by `angle` degrees */\n    static rotateZ(m: Float32Array, angle: number): Float32Array {\n        const r = toRadians(angle);\n        const s = Math.sin(r);\n        const c = Math.cos(r);\n        return Matrix4.multiply(\n            m,\n            new Float32Array([ \n                c, -s, 0, 0,\n                s,  c, 0, 0,\n                0,  0, 1, 0,\n                0,  0, 0, 1,\n            ]),\n            m,\n        );\n    }\n\n    /** Creates a new translation matrix, `dst` holds result if supplied */\n    static translation(vector: Vector3, dst?: Float32Array) {\n        dst = dst || Matrix4.identity();\n        dst[12] = vector.x;\n        dst[13] = vector.y;\n        dst[14] = vector.z;\n        return dst;\n    }\n\n    /** Multiplies matrix `a` by matrix `b`, `dst` holds result if supplied */\n    static multiply(a: Float32Array, b: Float32Array, dst?: Float32Array) {\n        dst = dst || new Float32Array(16);\n        let w = a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12];\n        let x = a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13];\n        let y = a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14];\n        let z = a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15];\n        dst[0] = w;\n        dst[1] = x;\n        dst[2] = y;\n        dst[3] = z;\n\n        w = a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12];\n        x = a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13];\n        y = a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14];\n        z = a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15];\n        dst[4] = w;\n        dst[5] = x;\n        dst[6] = y;\n        dst[7] = z;\n\n        w = a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12];\n        x = a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13];\n        y = a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14];\n        z = a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15];\n        dst[8] = w;\n        dst[9] = x;\n        dst[10] = y;\n        dst[11] = z;\n\n        w = a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12];\n        x = a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13];\n        y = a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14];\n        z = a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15];\n        dst[12] = w;\n        dst[13] = x;\n        dst[14] = y;\n        dst[15] = z;\n\n        return dst;\n    }\n\n    /** Inverts matrix `m` */\n    static invert(m: Float32Array, dst?: Float32Array) {\n        dst = dst || new Float32Array(16);\n        const l1 = m[0];\n        const l2 = m[1];\n        const l3 = m[2];\n        const l4 = m[3];\n        const l5 = m[4];\n        const l6 = m[5];\n        const l7 = m[6];\n        const l8 = m[7];\n        const l9 = m[8];\n        const l10 = m[9];\n        const l11 = m[10];\n        const l12 = m[11];\n        const l13 = m[12];\n        const l14 = m[13];\n        const l15 = m[14];\n        const l16 = m[15];\n\n        const l17 = (l11 * l16) - (l12 * l15);\n        const l18 = (l10 * l16) - (l12 * l14);\n        const l19 = (l10 * l15) - (l11 * l14);\n        const l20 = (l9 * l16) - (l12 * l13);\n        const l21 = (l9 * l15) - (l11 * l13);\n        const l22 = (l9 * l14) - (l10 * l13);\n\n        const l23 = ((l6 * l17) - (l7 * l18)) + (l8 * l19);\n        const l24 = -(((l5 * l17) - (l7 * l20)) + (l8 * l21));\n        const l25 = ((l5 * l18) - (l6 * l20)) + (l8 * l22);\n        const l26 = -(((l5 * l19) - (l6 * l21)) + (l7 * l22));\n        const l27 = 1.0 /\n            ((((l1 * l23) + (l2 * l24)) + (l3 * l25)) + (l4 * l26));\n\n        const l28 = (l7 * l16) - (l8 * l15);\n        const l29 = (l6 * l16) - (l8 * l14);\n        const l30 = (l6 * l15) - (l7 * l14);\n        const l31 = (l5 * l16) - (l8 * l13);\n        const l32 = (l5 * l15) - (l7 * l13);\n        const l33 = (l5 * l14) - (l6 * l13);\n        const l34 = (l7 * l12) - (l8 * l11);\n        const l35 = (l6 * l12) - (l8 * l10);\n        const l36 = (l6 * l11) - (l7 * l10);\n        const l37 = (l5 * l12) - (l8 * l9);\n        const l38 = (l5 * l11) - (l7 * l9);\n        const l39 = (l5 * l10) - (l6 * l9);\n        dst[0] = l23 * l27;\n        m[4] = l24 * l27;\n        dst[8] = l25 * l27;\n        m[12] = l26 * l27;\n        dst[1] = -(((l2 * l17) - (l3 * l18)) + (l4 * l19)) * l27;\n        dst[5] = (((l1 * l17) - (l3 * l20)) + (l4 * l21)) * l27;\n        dst[9] = -(((l1 * l18) - (l2 * l20)) + (l4 * l22)) * l27;\n        dst[13] = (((l1 * l19) - (l2 * l21)) + (l3 * l22)) * l27;\n        dst[2] = (((l2 * l28) - (l3 * l29)) + (l4 * l30)) * l27;\n        dst[6] = -(((l1 * l28) - (l3 * l31)) + (l4 * l32)) * l27;\n        dst[10] = (((l1 * l29) - (l2 * l31)) + (l4 * l33)) * l27;\n        dst[14] = -(((l1 * l30) - (l2 * l32)) + (l3 * l33)) * l27;\n        dst[3] = -(((l2 * l34) - (l3 * l35)) + (l4 * l36)) * l27;\n        dst[7] = (((l1 * l34) - (l3 * l37)) + (l4 * l38)) * l27;\n        dst[11] = -(((l1 * l35) - (l2 * l37)) + (l4 * l39)) * l27;\n        dst[15] = (((l1 * l36) - (l2 * l38)) + (l3 * l39)) * l27;\n        return dst;\n    }\n\n    /** Returns a copy of matrix `m`, `dest` holds result if supplied*/\n    static copy(m: Float32Array, dst?: Float32Array) {\n        if (m === dst) return dst;\n        dst = dst || new Float32Array(16);\n        dst.set(m);\n        return dst;\n    }\n\n    static transpose(m: Float32Array, dst?: Float32Array) {\n        dst = dst || new Float32Array(16);\n        if (dst === m) {\n            let t;\n            t = m[1];\n            m[1] = m[4];\n            m[4] = t;\n            t = m[2];\n            m[2] = m[8];\n            m[8] = t;\n            t = m[3];\n            m[3] = m[12];\n            m[12] = t;\n            t = m[6];\n            m[6] = m[9];\n            m[9] = t;\n            t = m[7];\n            m[7] = m[13];\n            m[13] = t;\n            t = m[11];\n            m[11] = m[14];\n            m[14] = t;\n            return dst;\n        }\n\n        const m00 = m[0], m01 = m[1];\n        const m02 = m[2], m03 = m[3];\n        const m10 = m[4], m11 = m[5];\n        const m12 = m[6], m13 = m[7];\n        const m20 = m[8], m21 = m[9];\n        const m22 = m[10], m23 = m[11];\n        const m30 = m[12], m31 = m[13];\n        const m32 = m[14], m33 = m[15];\n\n        dst[0] = m00;\n        dst[1] = m10;\n        dst[2] = m20;\n        dst[3] = m30;\n        dst[4] = m01;\n        dst[5] = m11;\n        dst[6] = m21;\n        dst[7] = m31;\n        dst[8] = m02;\n        dst[9] = m12;\n        dst[10] = m22;\n        dst[11] = m32;\n        dst[12] = m03;\n        dst[13] = m13;\n        dst[14] = m23;\n        dst[15] = m33;\n        return dst;\n    }\n}\n\nexport class Random {\n    /** Returns a value `v` where `min >= v < max` */\n    static value(min: number = 0, max: number = 1): number {\n        return Math.random() * (max - min) + min;\n    }\n}\n\nexport function toRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\nexport function toDegrees(radians: number): number {\n    return radians * (180 / Math.PI);\n}\n", "import { Matrix4, Vector3 } from '../utils/math.ts';\nimport Mesh from './mesh.ts';\n\nexport default class GameObject {\n\n    private needsUpdate: boolean = true;\n    \n    worldMatrix: Float32Array = Matrix4.identity();\n    viewMatrix: Float32Array = Matrix4.identity();\n    \n    position: Vector3 = Vector3.zero;\n    rotation: Vector3 = Vector3.zero;\n    scale:    Vector3 = Vector3.one;\n\n    mesh?: Mesh;\n    \n    readonly name: string;\n    \n    constructor(name: string, position?: Vector3, rotation?: Vector3) {\n        this.name = name;\n        if (position) this.setPosition(position);\n        if (rotation) this.setRotation(rotation);\n    }\n\n    get forward() {\n        return Vector3.transform(Vector3.forward, Matrix4.rotate(Matrix4.identity(), this.rotation))\n    }\n\n    setMesh(mesh: Mesh): this {\n        this.mesh = mesh;\n        return this;\n    }\n\n    setPosition(v: Vector3): this;\n    setPosition(x: number, y: number, z: number): this;\n    setPosition(a: Vector3 | number, b?: number, c?: number): this {\n        this.needsUpdate = true;\n\n        if (a instanceof Vector3) {\n            Vector3.copy(a, this.position);\n            return this;\n        }\n\n        if (typeof b === 'number' && typeof c === 'number') {\n            this.position.x = a;\n            this.position.y = b;\n            this.position.z = c;\n            return this;\n        }\n        throw new Error(\"Invalid arguments\");\n    }\n\n    setRotation(v: Vector3): this;\n    setRotation(x: number, y: number, z: number): this;\n    setRotation(a: Vector3 | number, b?: number, c?: number): this {\n        this.needsUpdate = true;\n\n        if (a instanceof Vector3) {\n            Vector3.copy(a, this.rotation);\n            return this;\n        }\n\n        if (typeof b === 'number' && typeof c === 'number') {\n            this.rotation.x = a % 360;\n            this.rotation.y = b % 360;\n            this.rotation.z = c % 360;\n            return this;\n        }\n        throw new Error(\"Invalid arguments\");\n    }\n\n    setScale(v: Vector3): this;\n    setScale(x: number, y: number, z: number): this;\n    setScale(a: Vector3 | number, b?: number, c?: number): this {\n        this.needsUpdate = true;\n\n        if (a instanceof Vector3) {\n            Vector3.copy(a, this.scale);\n            return this;\n        }\n\n        if (typeof b === 'number' && typeof c === 'number') {\n            this.scale.x = a;\n            this.scale.y = b;\n            this.scale.z = c;\n            return this;\n        }\n        throw new Error(\"Invalid arguments\");\n    }\n\n    rotate(v: Vector3): this;\n    rotate(x: number, y: number, z: number): this;\n    rotate(a: Vector3 | number, b?: number, c?: number): this {\n        this.needsUpdate = true;\n\n        if (a instanceof Vector3) {\n            Vector3.add(this.rotation, a, this.rotation);\n            return this;\n        }\n\n        if (typeof b === 'number' && typeof c === 'number') {\n            this.rotation.x = (this.rotation.x + a) % 360;\n            this.rotation.y = (this.rotation.y + b) % 360;\n            this.rotation.z = (this.rotation.z + c) % 360;\n            return this;\n        }\n        throw new Error(\"Invalid arguments\");\n    }\n\n    translate(v: Vector3): this;\n    translate(x: number, y: number, z: number): this;\n    translate(a: Vector3 | number, b?: number, c?: number): this {\n        this.needsUpdate = true;\n\n        if (a instanceof Vector3) {\n            Vector3.add(this.position, a, this.position);\n            return this;\n        }\n\n        if (typeof b === 'number' && typeof c === 'number') {\n            this.position.x = (this.position.x + a);\n            this.position.y = (this.position.y + b);\n            this.position.z = (this.position.z + c);\n            return this;\n        }\n        throw new Error(\"Invalid arguments\");\n    }\n\n    getWorldMatrix(): Float32Array {\n        if (this.needsUpdate) {\n            Matrix4.setScalar(this.scale, this.worldMatrix);\n            Matrix4.rotate(this.worldMatrix, this.rotation);\n            // Maybe possible to optimize multiplication if it's by a translation matrix, same with others like rotation\n            Matrix4.multiply(this.worldMatrix, Matrix4.translation(this.position), this.worldMatrix);\n            this.needsUpdate = false;\n        }\n        return this.worldMatrix;\n    }\n\n    getViewMatrix(): Float32Array {\n        if (this.needsUpdate) {\n            Matrix4.lookAt(this.position, Vector3.add(this.position, this.forward), undefined, this.viewMatrix);\n            this.needsUpdate = false;\n        }\n        return this.viewMatrix;\n    }\n\n\n}\n", "import { Matrix4, Vector3 } from '../utils/math.ts';\nimport GameObject from './gameObject.ts';\n\nexport default class Camera extends GameObject{\n    private projectionUpdated = true;\n    private projectionMatrix = Matrix4.identity();\n    \n    fov:  number;\n    near: number;\n    far:  number;\n\n    constructor(name: string, position?: Vector3, rotation?: Vector3) {\n        super(name, position, rotation);\n        this.fov = 0.90;\n        this.near = 0.1;\n        this.far = 20000;\n        globalThis.addEventListener('resize', () => this.projectionUpdated = true);\n    }\n    /* ========================================================== */\n\n    get aspect() { return globalThis.innerWidth / globalThis.innerHeight; }\n\n    getProjectionMatrix() {\n        if (this.projectionUpdated) {\n            Matrix4.perspectiveFovLH(this.fov, this.aspect, this.near, this.far, this.projectionMatrix);\n            this.projectionUpdated = false;\n        }\n        return this.projectionMatrix;\n    }\n}\n", "// https://github.com/greggman/twgl.js\n\nimport type Mesh from '../core/mesh.ts';\nimport type { ProgramInfo, UniformTypeInfo, UniformSetter, UniformType, UniformInfo, AttributeInfo } from '../types.d.ts';\n\n/** Better WebGL */\nexport default class BWGL {\n\n    static createProgramInfo(gl: WebGL2RenderingContext, vertSource: string = defaultVert, fragSource: string = defaultFrag): ProgramInfo {\n        \n        const program = createProgram(gl, vertSource, fragSource);\n        const uniformInfo = createUniformInfo(gl, program);\n        const attributeInfo = {} as Record<string, AttributeInfo>;\n\n        return {\n            program,\n            uniformInfo,\n            attributeInfo\n        }\n\n    }\n\n    static setUniforms(programInfo: ProgramInfo, uniformObject: Record<string, Float32Array | Int32Array | Uint32Array>) {\n\n        for (const [k, v] of Object.entries(uniformObject)) {\n            if (!(k in programInfo.uniformInfo)) {\n                console.error(\"Invalid uniform: \" + k);\n                continue;\n            }\n            \n            programInfo.uniformInfo[k].setter(v);\n        }\n\n    }\n\n    static getContext(canvas: HTMLCanvasElement) {\n        const ctx = canvas.getContext('webgl2');\n        if (!ctx)\n            throw new Error(\"Failed to get WebGL2 context of canvas\");\n        return ctx;\n    }\n\n    static VAO(gl: WebGL2RenderingContext, program: WebGLProgram, mesh: Mesh): WebGLVertexArrayObject {\n\n        const vao = gl.createVertexArray();\n        if (!vao)\n            throw new Error(\"Unable to create vao\");\n        \n        gl.bindVertexArray(vao);\n        \n        // Vertex buffer object and attribute\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, mesh.vertices, gl.STATIC_DRAW);\n        createAttribute(gl, program, 'a_position', 3, gl.FLOAT, false, 3*4, 0);\n        \n        // Normal buffer object and attribute\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, mesh.normals, gl.STATIC_DRAW);\n        createAttribute(gl, program, 'a_normal', 3, gl.FLOAT, false, 3*4, 0);\n        // Texcoord buffer object and attribute\n        if (mesh.uvs?.length) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n            gl.bufferData(gl.ARRAY_BUFFER, mesh.uvs, gl.STATIC_DRAW);\n            createAttribute(gl, program, 'a_texCoord', 2, gl.FLOAT, true, 2*4, 0);\n        }\n        \n        // Element buffer object\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, mesh.triangles, gl.STATIC_DRAW);\n            \n        return vao;\n    }\n    \n\n}\n\n\nfunction createAttribute(gl: WebGL2RenderingContext, program: WebGLProgram, name: string,\n    size: number, type: number, normalized: boolean, stride: number, offset: number) {\n    const loc = gl.getAttribLocation(program, name);\n    gl.vertexAttribPointer(loc, size, type, normalized, stride, offset);\n    gl.enableVertexAttribArray(loc);\n}\n\n// Create and compile a new program\nfunction createProgram(gl: WebGL2RenderingContext, vertSource: string, fragSource: string): WebGLProgram {\n    \n    const program = gl.createProgram();\n    if (!program)\n        throw new Error(\"Unable to create Program\");\n    \n    createShader(gl, program, vertSource, VERTEX_SHADER);\n    createShader(gl, program, fragSource, FRAGMENT_SHADER);\n\n    // Linking\n    gl.linkProgram(program);\n    gl.validateProgram(program);\n    if (!gl.getProgramParameter(program, LINK_STATUS))\n        console.error('Program linking failed:\\n\\n', gl.getProgramInfoLog(program));\n    if (!gl.getProgramParameter(program, VALIDATE_STATUS))\n        console.error('Program validation failed:\\n\\n', gl.getProgramInfoLog(program));\n\n    // Settings\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.frontFace(gl.CW);\n    gl.cullFace(gl.BACK);\n\n    gl.useProgram(program);\n    return program;\n\n}\n\n\n/** Create a `type` shader from `source`, compile and attach to `program` */\nfunction createShader(gl: WebGL2RenderingContext, program: WebGLProgram, source: string, type: GLenum): WebGLShader {\n    \n    const shader = gl.createShader(type);\n    if (!shader)\n        throw new Error(\"Unable to create Shader\");\n    \n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    \n    const didCompile = gl.getShaderParameter(shader, COMPILE_STATUS);\n    if (!didCompile)\n        throw new Error(\"Unable to compile Shader.\\n\\n\" + gl.getShaderInfoLog(shader));\n    \n    gl.attachShader(program, shader);\n\n    return shader;\n\n}\n\n\n\nfunction createUniformInfo(gl: WebGL2RenderingContext, program: WebGLProgram): Record<string, UniformInfo> {\n    \n    const uniforms: Record<string, UniformInfo> = {};\n    const uCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    \n    for (let i = 0; i < uCount; i++) {\n        const info = gl.getActiveUniform(program, i);\n        if (!info) continue;\n        const loc = gl.getUniformLocation(program, info.name)!;\n\n        uniforms[info.name] = {\n            location: gl.getUniformLocation(program, info.name)!,\n            setter: typeMap[info.type].setter(gl, loc)\n        };\n    }\n    \n    return uniforms;\n\n}\n\n\n// const TEXTURE0        = 0x84c0;\nconst COMPILE_STATUS  = 0x8b81;\nconst LINK_STATUS     = 0x8b82;\nconst VALIDATE_STATUS = 0x8B83;\nconst FRAGMENT_SHADER = 0x8b30;\nconst VERTEX_SHADER   = 0x8b31;\n\nconst FLOAT = 0x1406, FLOAT_VEC2 = 0x8B50, FLOAT_VEC3 = 0x8B51, FLOAT_VEC4 = 0x8B52;\nconst INT   = 0x1404, INT_VEC2   = 0x8B53, INT_VEC3   = 0x8B54, INT_VEC4   = 0x8B55;\nconst BOOL  = 0x8B56, BOOL_VEC2  = 0x8B57, BOOL_VEC3  = 0x8B58, BOOL_VEC4  = 0x8B59;\n\nconst FLOAT_MAT2 = 0x8B5A, FLOAT_MAT2x3 = 0x8B65, FLOAT_MAT2x4 = 0x8B66;\nconst FLOAT_MAT3 = 0x8B5B, FLOAT_MAT3x2 = 0x8B67, FLOAT_MAT3x4 = 0x8B68;\nconst FLOAT_MAT4 = 0x8B5C, FLOAT_MAT4x2 = 0x8B69, FLOAT_MAT4x3 = 0x8B6A;\n\nconst UNSIGNED_INT      = 0x1405, UNSIGNED_INT_VEC2 = 0x8DC6;\nconst UNSIGNED_INT_VEC3 = 0x8DC7, UNSIGNED_INT_VEC4 = 0x8DC8;\n\n// const SAMPLER_2D = 0x8B5E, SAMPLER_CUBE = 0x8B60, SAMPLER_3D = 0x8B5F;\n// const SAMPLER_2D_SHADOW       = 0x8B62, SAMPLER_2D_ARRAY    = 0x8DC1;\n// const SAMPLER_2D_ARRAY_SHADOW = 0x8DC4, SAMPLER_CUBE_SHADOW = 0x8DC5;\n// const INT_SAMPLER_2D   = 0x8DCA, INT_SAMPLER_3D       = 0x8DCB;\n// const INT_SAMPLER_CUBE = 0x8DCC, INT_SAMPLER_2D_ARRAY = 0x8DCF;\n// const UNSIGNED_INT_SAMPLER_2D   = 0x8DD2, UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\n// const UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4, UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\n// const TEXTURE_2D = 0x0DE1, TEXTURE_CUBE_MAP = 0x8513;\n// const TEXTURE_3D = 0x806F, TEXTURE_2D_ARRAY = 0x8C1A;\n\nconst typeMap: Record<UniformType, UniformTypeInfo> = {};\ntypeMap[FLOAT]                         = { type: Float32Array, size:  4, setter: floatArraySetter, cols: 1, };\ntypeMap[FLOAT_VEC2]                    = { type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT]                           = { type: Int32Array,   size:  4, setter: intArraySetter,   cols: 1, };\ntypeMap[INT_VEC2]                      = { type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT]                  = { type: Uint32Array,  size:  4, setter: uintArraySetter,  cols: 1, };\ntypeMap[UNSIGNED_INT_VEC2]             = { type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { type: Uint32Array,  size:  4, setter: intArraySetter,   cols: 1, };\ntypeMap[BOOL_VEC2]                     = { type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\n// typeMap[SAMPLER_2D]                    = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n// typeMap[SAMPLER_CUBE]                  = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n// typeMap[SAMPLER_3D]                    = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n// typeMap[SAMPLER_2D_SHADOW]             = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n// typeMap[SAMPLER_2D_ARRAY]              = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n// typeMap[SAMPLER_2D_ARRAY_SHADOW]       = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n// typeMap[SAMPLER_CUBE_SHADOW]           = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n// typeMap[INT_SAMPLER_2D]                = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n// typeMap[INT_SAMPLER_3D]                = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n// typeMap[INT_SAMPLER_CUBE]              = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n// typeMap[INT_SAMPLER_2D_ARRAY]          = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n// typeMap[UNSIGNED_INT_SAMPLER_2D]       = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\n// typeMap[UNSIGNED_INT_SAMPLER_3D]       = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\n// typeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\n// typeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { type: null,         size:  0, setter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n\n\nfunction floatArraySetter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform1fv(location, v as Float32Array); };\n}\n\nfunction floatVec2Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform2fv(location, v as Float32Array); };\n}\n\nfunction floatVec3Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform3fv(location, v as Float32Array); };\n}\n\nfunction floatVec4Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform4fv(location, v as Float32Array); };\n}\n\nfunction intArraySetter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform1iv(location, v as Int32Array); };\n}\n\nfunction intVec2Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform2iv(location, v as Int32Array); };\n}\n\nfunction intVec3Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform3iv(location, v as Int32Array); };\n}\n\nfunction intVec4Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform4iv(location, v as Int32Array); };\n}\n\nfunction uintArraySetter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform1uiv(location, v as Uint32Array); };\n}\n\nfunction uintVec2Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform2uiv(location, v as Uint32Array); };\n}\n\nfunction uintVec3Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform3uiv(location, v as Uint32Array); };\n}\n\nfunction uintVec4Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniform4uiv(location, v as Uint32Array); };\n}\n\nfunction floatMat2Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter {\n    return function(v) { gl.uniformMatrix2fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat3Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix3fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat4Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix4fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat23Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix2x3fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat32Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix3x2fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat24Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix2x4fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat42Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix4x2fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat34Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix3x4fv(location, false, v as Float32Array); };\n}\n\nfunction floatMat43Setter(gl: WebGL2RenderingContext, location: WebGLUniformLocation): UniformSetter  {\n    return function(v) { gl.uniformMatrix4x3fv(location, false, v as Float32Array); };\n}\n\n\n// function samplerArraySetter(gl: WebGL2RenderingContext, type: UniformType, unit: number, location: WebGLUniformLocation, size: number) {\n//     const bindPoint = typeMap[type].bindPoint!;\n//     const units = new Int32Array(size);\n//     for (let ii = 0; ii < size; ++ii) {\n//         units[ii] = unit + ii;\n//     }\n\n//     return function(textures: []) {\n//         gl.uniform1iv(location, units);\n//         textures.forEach(function(textureOrPair, index) {\n//             gl.activeTexture(TEXTURE0 + units[index]);\n//             let texture;\n//             let sampler;\n//             if (!textureOrPair || helper.isTexture(gl, textureOrPair)) {\n//                 texture = textureOrPair;\n//                 sampler = null;\n//             } else {\n//                 texture = textureOrPair.texture;\n//                 sampler = textureOrPair.sampler;\n//             }\n//             gl.bindSampler(unit, sampler);\n//             gl.bindTexture(bindPoint, texture);\n//         });\n//     }\n// }\n\n\nconst defaultVert = `#version 300 es\n\n    uniform mat4 u_world;\n    uniform mat4 u_view;\n    uniform mat4 u_proj;\n\n    in vec3 a_position;\n    in vec3 a_normal;\n\n    out vec3 v_normal;\n\n    void main() {\n        // v_normal = a_normal;\n        v_normal = mat3(u_world) * a_normal;\n        gl_Position = u_proj * u_view * u_world * vec4(a_position, 1.0);\n    }\n`;\n    \nconst defaultFrag = `#version 300 es\n    precision mediump float;\n\n    uniform vec4 u_color;\n\n    in vec3 v_normal;\n\n    out vec4 f_color;\n\n    void main() {\n        vec3 normal = normalize(v_normal);\n        float light = dot(normal, vec3(0.5, 0.7, -1.0)) * 0.5 + 0.5;\n        //f_color = vec4(normal, 1.0); \n        f_color = u_color;\n        f_color.rgb *= light;\n    }\n`;", "import type { ProgramInfo } from '../types.d.ts';\nimport Camera from '../core/camera.ts';\nimport BWGL from './bwgl.ts';\nimport type Scene from '../core/scene.ts';\n\nexport default class Renderer {\n    \n    gl: WebGL2RenderingContext;\n    canvas: HTMLCanvasElement;\n    programInfo: ProgramInfo;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n        this.gl = BWGL.getContext(canvas);\n        this.programInfo = BWGL.createProgramInfo(this.gl);\n        this.gl.clearColor(0.3, 0.6, 0.8, 1);\n        this.resizeCanvas();\n        globalThis.addEventListener('resize', () => this.resizeCanvas);\n    }\n\n    render(scene: Scene, camera: Camera) {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n        BWGL.setUniforms(this.programInfo, {\n            u_view: camera.getViewMatrix(),\n            u_proj: camera.getProjectionMatrix()\n        });\n\n        for (const object of scene.objects) {\n            if (!object.mesh) continue;\n            if (!object.mesh.vao)\n                object.mesh.vao = BWGL.VAO(this.gl, this.programInfo.program, object.mesh);\n            BWGL.setUniforms(this.programInfo, {\n                u_world: object.getWorldMatrix(),\n                u_color: object.mesh.material.f32()\n            }); \n            this.gl.bindVertexArray(object.mesh.vao);\n            this.gl.drawElements(this.gl.TRIANGLES, object.mesh.triangles.length, this.gl.UNSIGNED_SHORT, 0);\n        }\n    }\n\n    resizeCanvas(mult: number = 1) {\n        this.gl.canvas.width = globalThis.innerWidth * mult;\n        this.gl.canvas.height = globalThis.innerHeight * mult;\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    }\n}\n", "export default class Color {\n    r: number;\n    g: number;\n    b: number;\n\n    constructor(r: number, g: number, b: number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    static get red() {\n        return new this(1, 0, 0);\n    }\n    static get green() {\n        return new this(0, 1, 0);\n    }\n    static get blue() {\n        return new this(0, 0, 1);\n    }\n    static get white() {\n        return new this(1, 1, 1);\n    }\n    static get black() {\n        return new this(0, 0, 0);\n    }\n\n    static get aqua() {\n        return new this(0.75, 0.85, 0.8);\n    }\n}\n", "import Color from '../utils/color.ts';\nimport { Random } from '../utils/math.ts';\n\nexport default class Material {\n\n    \n    color: Color;\n    opacity: number = 1;\n    \n    constructor(color: Color) {\n        this.color = color;\n    }\n    \n    static get default(): Material {\n        return new Material(new Color(1, 0, 1));\n    }\n\n    static get random(): Material {\n        return new Material(new Color(Random.value(), Random.value(), Random.value()));\n    }\n\n    f32() {\n        return new Float32Array([this.color.r, this.color.g, this.color.b, this.opacity]);\n    }\n}", "import Material from './material.ts';\n\nexport default class Mesh {\n\n    vertices: Float32Array;\n    normals: Float32Array;\n    triangles: Uint16Array;\n    uvs?: Float32Array;\n\n    material: Material = Material.default;\n    \n    vao?: WebGLVertexArrayObject;\n\n    constructor(vertices: Float32Array, normals: Float32Array, tris: Uint16Array) {\n        this.vertices = vertices;\n        this.normals = normals;\n        this.triangles = tris;\n    }\n\n    static Cube() {\n        // deno-fmt-ignore\n        const verts = new Float32Array([\n            -0.5, -0.5, -0.5,\n            -0.5,  0.5, -0.5,\n             0.5, -0.5, -0.5,\n             0.5,  0.5, -0.5,\n            -0.5, -0.5,  0.5,\n            -0.5,  0.5,  0.5,\n             0.5, -0.5,  0.5,\n             0.5,  0.5,  0.5,\n        ]);\n        // deno-fmt-ignore\n        const norms = new Float32Array([\n            -1, -1, -1,\n            -1,  1, -1,\n             1, -1, -1,\n             1,  1, -1,\n            -1, -1,  1,\n            -1,  1,  1,\n             1, -1,  1,\n             1,  1,  1,\n        ]);\n        // deno-fmt-ignore\n        const tris = new Uint16Array([\n            0, 1, 3,   0, 3, 2,\n            2, 3, 7,   2, 7, 6,\n            6, 7, 5,   6, 5, 4,\n            4, 5, 1,   4, 1, 0,\n            1, 5, 7,   1, 7, 3,\n            4, 0, 2,   4, 2, 6,\n        ]);\n        return new Mesh(verts, norms, tris);\n    }\n\n    static Pyramid() {\n        // deno-fmt-ignore\n        const verts = new Float32Array([\n             0,  0.5,    0,\n            -0.5, -0.5,  0.5,\n             0.5, -0.5,  0.5,\n             0.5, -0.5, -0.5,\n            -0.5, -0.5, -0.5,\n        ]);\n        // deno-fmt-ignore\n        const norms = new Float32Array([\n             0,  1,  0,\n            -1,  0,  1,\n             1,  0,  1,\n             1,  0, -1,\n            -1,  0, -1,\n        ]);\n        // deno-fmt-ignore\n        const tris = new Uint16Array([\n            0, 1, 2,    0, 2, 3,\n            0, 3, 4,    0, 4, 1,\n            1, 4, 2,    2, 4, 3\n        ]);\n        return new Mesh(verts, norms, tris);\n    }\n\n    static Plane() {\n        // deno-fmt-ignore\n        const verts = new Float32Array([\n           -0.5, 0, -0.5, //BL\n           -0.5, 0,  0.5, //TL\n            0.5, 0, -0.5, //BR\n            0.5, 0,  0.5, //TR\n       ]);\n       // deno-fmt-ignore\n       const norms = new Float32Array([\n            0,  1,  0,\n            0,  1,  0,\n            0,  1,  0,\n            0,  1,  0,\n       ]);\n       // deno-fmt-ignore\n       const tris = new Uint16Array([\n           0, 1, 2,    2, 1, 3\n       ]);\n       return new Mesh(verts, norms, tris);\n    }\n\n}", "\nimport GameObject from './gameObject.ts';\n\nexport default class Scene {\n\n    objects: GameObject[] = [];\n\n    constructor(...objects: GameObject[]) {\n        \n        for (const object of objects) {\n            this.add(object);\n        }\n\n    }\n\n    add(object: GameObject) {\n        this.objects.push(object);\n    }\n\n}\n", "import { Vector3 } from './math.ts';\n\nexport default class Input {\n    \n    movement: Vector3;\n    rotation: Vector3;\n\n    constructor() {\n        this.movement = Vector3.zero;\n        this.rotation = Vector3.zero;\n        document.addEventListener('keydown', (e) => this.onKey(e));\n        document.addEventListener('keyup', (e) => this.onKey(e));\n    }\n\n    private onKey(e: KeyboardEvent) {\n        const isDown = e.type === 'keydown';\n        switch (e.key) {\n            case 'w': case 'W':\n                this.movement.z = isDown ? 1 : 0; break;\n            case 's': case 'S':\n                this.movement.z = isDown ? -1 : 0; break;\n            case 'a': case 'A':\n                this.movement.x = isDown ? -1 : 0; break;\n            case 'd': case 'D':\n                this.movement.x = isDown ? 1 : 0; break;\n            case 'Shift':\n                this.movement.y = isDown ? -1 : 0; break;\n            case ' ':\n                this.movement.y = isDown ? 1 : 0; break;\n            case 'ArrowDown':\n                this.rotation.x = isDown ? 1 : 0; break;\n            case 'ArrowUp':\n                this.rotation.x = isDown ? -1 : 0; break;\n            case 'ArrowLeft':\n                this.rotation.y = isDown ? -1 : 0; break;\n            case 'ArrowRight':\n                this.rotation.y = isDown ? 1 : 0; break;\n        }\n    }\n\n    \n}", "// https://github.com/mrdoob/three.js/blob/dev/src/extras/Controls.js\n\nexport default class Clock {\n\n    autoStart: boolean;\n    startTime: number;\n    oldTime: number;\n    elapsedTime: number;\n    running: boolean;\n\n    constructor( autoStart = true ) {\n        this.autoStart = autoStart;\n        this.startTime = 0;\n        this.oldTime = 0;\n        this.elapsedTime = 0;\n        this.running = false;\n    }\n\n    start() {\n        this.startTime = performance.now();\n        this.oldTime = this.startTime;\n        this.elapsedTime = 0;\n        this.running = true;\n    }\n\n    stop() {\n        this.getElapsedTime();\n        this.running = false;\n        this.autoStart = false;\n    }\n\n    getElapsedTime() {\n        this.getDelta();\n        return this.elapsedTime;\n    }\n\n    getDelta(): number {\n        let diff = 0;\n        if (this.autoStart && !this.running) {\n            this.start();\n            return 0;\n        }\n        if (this.running) {\n            const newTime = performance.now();\n            diff = ( newTime - this.oldTime ) / 1000;\n            this.oldTime = newTime;\n            this.elapsedTime += diff;\n        }\n\n        return diff;\n    }\n\n}", "import GameObject from './core/gameObject.ts';\nimport Camera from './core/camera.ts';\nimport { Vector3, Matrix4 } from './utils/math.ts';\nimport Renderer from './renderer/renderer.ts';\nimport Mesh from './core/mesh.ts';\nimport Scene from './core/scene.ts';\nimport Input from './utils/input.ts';\nimport Clock from './core/clock.ts';\nimport Material from './core/material.ts';\n\nconst r = new Renderer(document.querySelector('canvas')!);\n\nconst camera = new Camera('main').setPosition(0, 2, -6);\nconst cube = new GameObject('cube').setMesh(Mesh.Cube());\nconst pyramid = new GameObject('pyramid', new Vector3(-1, 0, 0)).setMesh(Mesh.Pyramid());\nconst floor = new GameObject('floor').setMesh(Mesh.Plane()).setScale(10, 1, 10);\ncube.mesh!.material = Material.random;\npyramid.mesh!.material = Material.random;\nfloor.mesh!.material = Material.random;\n\nconst scene = new Scene(cube, pyramid, floor);\nconst input = new Input();\nconst clock = new Clock();\n\n\nlet dT: number, eT: number;\nfunction draw() {\n    dT = clock.getDelta();\n    eT = clock.elapsedTime;\n\n    cube.rotate(0, 90 * dT, 0);\n    pyramid.rotate(0, 90 * -dT, 0);\n\n    cube.setPosition(1, Math.sin(2 * eT) + 1.5, 0);\n    pyramid.setPosition(-1, Math.cos(2 * eT) + 1.5, 0);\n\n    movePlayer(dT);\n\n    r.render(scene, camera);\n    requestAnimationFrame(draw)\n}\nrequestAnimationFrame(draw);\n\n\n\nfunction movePlayer(t: number): void {\n    const moveSpeed = 10;\n    const lookSpeed = 80;\n\n    camera.rotate(Vector3.scale(input.rotation, dT * lookSpeed));\n\n    if (Vector3.equals(input.movement, Vector3.zero))\n        return;\n\n    const h = new Vector3(input.movement.x, 0, input.movement.z);\n    Vector3.normalize(h, h);\n\n    const m = Vector3.transform(h, Matrix4.rotate(Matrix4.identity(), camera.rotation));\n    m.y = 0;\n    Vector3.normalize(m, m);\n    m.y = input.movement.y;\n\n    camera.translate(Vector3.scale(m, t * moveSpeed));\n}"],
  "mappings": "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",
  "names": ["Vector3", "_Vector3", "x", "y", "z", "vector", "dst", "transformation", "w", "a", "b", "t1", "t2", "n", "mag", "num", "Matrix4", "_Matrix4", "eye", "target", "up", "zAxis", "xAxis", "yAxis", "fov", "aspect", "near", "far", "tan", "m", "angle", "toRadians", "s", "c", "l1", "l2", "l3", "l4", "l5", "l6", "l7", "l8", "l9", "l10", "l11", "l12", "l13", "l14", "l15", "l16", "l17", "l18", "l19", "l20", "l21", "l22", "l23", "l24", "l25", "l26", "l27", "l28", "l29", "l30", "l31", "l32", "l33", "l34", "l35", "l36", "l37", "l38", "l39", "t", "m00", "m01", "m02", "m03", "m10", "m11", "m12", "m13", "m20", "m21", "m22", "m23", "m30", "m31", "m32", "m33", "Random", "min", "max", "degrees", "GameObject", "Matrix4", "Vector3", "name", "position", "rotation", "mesh", "a", "b", "c", "Camera", "GameObject", "Matrix4", "name", "position", "rotation", "BWGL", "gl", "vertSource", "defaultVert", "fragSource", "defaultFrag", "program", "createProgram", "uniformInfo", "createUniformInfo", "programInfo", "uniformObject", "k", "v", "canvas", "ctx", "mesh", "vao", "createAttribute", "name", "size", "type", "normalized", "stride", "offset", "loc", "createShader", "VERTEX_SHADER", "FRAGMENT_SHADER", "LINK_STATUS", "VALIDATE_STATUS", "source", "shader", "COMPILE_STATUS", "uniforms", "uCount", "i", "info", "typeMap", "FLOAT", "FLOAT_VEC2", "FLOAT_VEC3", "FLOAT_VEC4", "INT", "INT_VEC2", "INT_VEC3", "INT_VEC4", "BOOL", "BOOL_VEC2", "BOOL_VEC3", "BOOL_VEC4", "FLOAT_MAT2", "FLOAT_MAT2x3", "FLOAT_MAT2x4", "FLOAT_MAT3", "FLOAT_MAT3x2", "FLOAT_MAT3x4", "FLOAT_MAT4", "FLOAT_MAT4x2", "FLOAT_MAT4x3", "UNSIGNED_INT", "UNSIGNED_INT_VEC2", "UNSIGNED_INT_VEC3", "UNSIGNED_INT_VEC4", "floatArraySetter", "floatVec2Setter", "floatVec3Setter", "floatVec4Setter", "intArraySetter", "intVec2Setter", "intVec3Setter", "intVec4Setter", "uintArraySetter", "uintVec2Setter", "uintVec3Setter", "uintVec4Setter", "floatMat2Setter", "floatMat3Setter", "floatMat4Setter", "floatMat23Setter", "floatMat24Setter", "floatMat32Setter", "floatMat34Setter", "floatMat42Setter", "floatMat43Setter", "location", "Renderer", "canvas", "BWGL", "scene", "camera", "object", "mult", "Color", "r", "g", "b", "Material", "_Material", "color", "Color", "Random", "Mesh", "_Mesh", "Material", "vertices", "normals", "tris", "verts", "norms", "Scene", "objects", "object", "Input", "Vector3", "e", "isDown", "Clock", "autoStart", "diff", "newTime", "r", "Renderer", "camera", "Camera", "cube", "GameObject", "Mesh", "pyramid", "Vector3", "floor", "Material", "scene", "Scene", "input", "Input", "clock", "Clock", "dT", "eT", "draw", "movePlayer", "t", "h", "m", "Matrix4"]
}
